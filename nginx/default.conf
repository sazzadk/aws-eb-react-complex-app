# our react app forwards input from nginx to react client listening on port 3000
# client is the domain/hostname of the react app under client folder
upstream client {
    server client:3000;
}
# api server which handles postgres and redis io sits on port 5000 on backend
# api is the domain/hostname for the server folder
upstream api {
    server api:5000;
}

# inside the container, nginx starts on port 80
# config belongs to the nginx folder
# Needs 3 forwarders
# 1 - forward / with index.html etc to the react app which is client
# 2 - forward /sockjs-node websocket reverse request for React app
# 3 - forward /api/values/* urls to the api server with express/progress/redis as /values/
server {
    listen 80;
    location / {
        proxy_pass http://client;
    }
    location /sockjs-node {
        proxy_pass http://client;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }
    location /api {
        rewrite /api/(.*) /$1 break;
        proxy_pass http://api;
    }
}
